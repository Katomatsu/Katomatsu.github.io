{"version":3,"file":"loader.demo.js","sources":["../src/types/common.ts","../src/constants/common.ts","../src/helpers/initQuizzes.ts","../src/loader.demo.ts"],"sourcesContent":["export interface ExternalCommand {\n  name: string\n  params?: unknown\n}\nexport type Tracker = ((method: string, options?: unknown) => void) & {quizzes: {queue: ExternalCommand[]}}\nexport enum Subdivision {\n  Mindbox = 'mindbox',\n  Maestra = 'maestra',\n}\nexport enum TrackerName {\n  Mindbox = 'mindbox',\n  Maestra = 'maestra',\n}\nexport type ExperimentsCookie = Record<string, string>\n","import {Subdivision, TrackerName} from '~/types/common'\n\nexport const TASK_EXECUTOR_INTERVAL = 1000\nexport const LOCATION_OBSERVER_INTERVAL = 300\n\nexport const SUBDIVISION: Subdivision = import.meta.env.WIDGET_SUBDIVISION\n\nconst TRACKER_NAME_MAP = {\n  [Subdivision.Maestra]: TrackerName.Maestra,\n  [Subdivision.Mindbox]: TrackerName.Mindbox,\n}\nexport const TRACKER_NAME = TRACKER_NAME_MAP[SUBDIVISION]\n\nexport const URL_SEARCH_PARAM_PREFIX = 'qz'\n\nexport const COOKIE_SETTINGS = {\n  sameSite: 'none',\n  secure: true,\n} as const\nexport const COOKIE_QZ_SESSION_NAME = '_qz_sess'\nexport const COOKIE_QZ_AB_NAME = '_qz_ab'\nexport const COOKIE_QZ_TOKEN_NAME = '_qz_token'\n\nexport const SEARCH_PARAM_QZ_AB = `${URL_SEARCH_PARAM_PREFIX}_ab`\nexport const SEARCH_PARAM_TOKEN = 'token'\n\nexport const WIZARD_ID_PARAM = `${URL_SEARCH_PARAM_PREFIX}_wizard`\n\n// TODO: fix headers\nexport const HEADER_QZ_AB = 'x-experiments'\nexport const HEADER_QZ_TOKEN = 'x-qz-token'\n\nexport const INLINE_TARGET_ID = 'qz-target'\n\nexport const CONTAINER_ID = 'qz-container'\n\nexport const INLINE_START_QUESTION_CONTAINER_ID = 'inline-start-question-container'\n\nexport const DEFAULT_LANG = 'en-US'\n","export const initQuizzes = () => {\n  ;(function (\n    window: Window,\n    document: Document,\n    scriptTagName: string,\n    scriptSrc: string,\n    scriptVersion: string,\n    globalObjectName: string,\n  ) {\n    interface MessageQueueFunction {\n      (...args: unknown[]): void\n      q?: unknown[][]\n    }\n\n    const globalObject: MessageQueueFunction = (window[globalObjectName] =\n      window[globalObjectName] ||\n      function (...args: unknown[]) {\n        ;(globalObject.q = globalObject.q || []).push(args)\n      })\n\n    const scriptElement = document.createElement(scriptTagName) as HTMLScriptElement\n    scriptElement.src = `${scriptSrc}?v=${scriptVersion}`\n    scriptElement.type = 'module'\n    scriptElement.async = true\n\n    document.head.appendChild(scriptElement)\n  })(window, document, 'script', import.meta.env.WIDGET_SCRIPT_URI, import.meta.env.WIDGET_VERSION, 'mqzzs')\n\n  mqzzs('init', {apiEndpoint: import.meta.env.WIDGET_API_ENDPOINT})\n}\n","import {WIZARD_ID_PARAM} from './constants/common'\nimport {initQuizzes} from './helpers/initQuizzes'\n\nif (window.location.search.includes(WIZARD_ID_PARAM)) {\n  initQuizzes()\n}\n"],"names":["Subdivision","TrackerName","URL_SEARCH_PARAM_PREFIX","WIZARD_ID_PARAM","initQuizzes","window","document","scriptTagName","scriptSrc","scriptVersion","globalObjectName","globalObject","args","scriptElement","document2"],"mappings":"AAKY,IAAAA,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,QAAU,UAFAA,IAAAA,GAAA,CAAA,CAAA,EAIAC,GAAAA,IACVA,EAAA,QAAU,UACVA,EAAA,QAAU,UAFAA,IAAAA,GAAA,CAAA,CAAA,ECDTD,EAAY,QAAZ,GAAsBC,EAAY,QAClCD,EAAY,QAAZ,GAAsBC,EAAY,QAI9B,MAAMC,EAA0B,KAa1BC,EAAkB,GAAGD,CAAuB,UC1B5CE,EAAc,IAAM,EAC7B,SACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACA,CAMM,MAAAC,EAAsCN,EAAOK,CAAgB,EACjEL,EAAOK,CAAgB,GACvB,YAAaE,EAAiB,EAC1BD,EAAa,EAAIA,EAAa,GAAK,IAAI,KAAKC,CAAI,CAAA,EAGhDC,EAAgBP,EAAS,cAAcC,CAAa,EAC1DM,EAAc,IAAM,GAAGL,CAAS,MAAMC,CAAa,GACnDI,EAAc,KAAO,SACrBA,EAAc,MAAQ,GAEbC,EAAA,KAAK,YAAYD,CAAa,CAAA,GACtC,OAAQ,SAAU,SAAU,sBAAmC,mBAAgC,OAAO,EAEzG,MAAM,OAAQ,CAAC,YAAa,uBAAoC,CAAA,CAClE,EC1BI,OAAO,SAAS,OAAO,SAASV,CAAe,GACrCC"}